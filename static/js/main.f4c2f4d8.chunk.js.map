{"version":3,"sources":["context/useToggel.js","context/ContextHooks.js","component/EditTodoForm.js","component/Todo.js","component/TodoList.js","component/Form.js","component/TodoApp.js","context/useTodosState.js","App.js","index.js"],"names":["useToggel","initialValue","useState","state","setState","toggle","value","setValue","e","target","EditTodoForm","toggel","editTodo","id","task","useInputState","handelChange","reset","handelSubmit","preventDefault","onSubmit","style","display","alignItems","marginLeft","TextField","onChange","fullWidth","autoFocus","IconButton","aria-label","onClick","Todo","completed","removeTodo","toggelTodo","isEditting","ListItem","height","tabIndex","checked","ListItemText","textDecoration","ListItemSecondaryAction","TodoList","todos","Paper","length","List","map","todo","i","key","Divider","Typography","variant","textAlign","padding","Form","addTodo","margin","label","TodoApp","initialTodos","setTodos","newTodo","uuid","todoId","updatedTodo","filter","newTask","editedTodo","useTodosState","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","paddind","backgroundColor","AppBar","color","position","Grid","container","justify","paddingTop","item","xs","md","lg","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4c2f4d8.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useToggel = (initialValue = false) => {\r\n  const [state, setState] = useState(initialValue);\r\n\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  return [state, toggle];\r\n};\r\nexport default useToggel;\r\n","import { useState } from \"react\";\r\n\r\nexport default initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handelChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n  return [value, handelChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useInputState from \"../context/ContextHooks\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst EditTodoForm = ({ toggel, editTodo, id, task }) => {\r\n  const [value, handelChange, reset] = useInputState(task);\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n    editTodo(id, value);\r\n    toggel();\r\n    reset();\r\n  };\r\n  return (\r\n    <form\r\n      onSubmit={handelSubmit}\r\n      style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"1rem\" }}\r\n    >\r\n      <TextField value={value} onChange={handelChange} fullWidth autoFocus />\r\n      <IconButton aria-label=\"Save\" onClick={handelSubmit}>\r\n        <SaveIcon />\r\n      </IconButton>\r\n    </form>\r\n  );\r\n};\r\nexport default EditTodoForm;\r\n","import React from \"react\";\r\nimport useToggel from \"../context/useToggel\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport CheckBox from \"@material-ui/core/CheckBox\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EditTodoForm from \"./EditTodoForm\";\r\n\r\nconst Todo = ({ task, completed, removeTodo, id, toggelTodo, editTodo }) => {\r\n  const [isEditting, toggel] = useToggel(false);\r\n\r\n  return (\r\n    <>\r\n      <ListItem style={{ height: \"64px\" }}>\r\n        {isEditting ? (\r\n          <EditTodoForm\r\n            toggel={toggel}\r\n            editTodo={editTodo}\r\n            id={id}\r\n            task={task}\r\n          />\r\n        ) : (\r\n          <>\r\n            <CheckBox\r\n              tabIndex={-1}\r\n              checked={completed}\r\n              onClick={() => toggelTodo(id)}\r\n            />\r\n            <ListItemText\r\n              style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\r\n            >\r\n              {task}\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              <IconButton aria-label=\"Delete\" onClick={() => removeTodo(id)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <IconButton aria-label=\"Edit\" onClick={toggel}>\r\n                <EditIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </>\r\n        )}\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Todo from \"./Todo\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst TodoList = ({ todos, removeTodo, toggelTodo, editTodo }) => {\r\n  return (\r\n    <Paper>\r\n      {todos.length > 0 ? (\r\n        <List>\r\n          {todos.map((todo, i) => (\r\n            <>\r\n              <Todo\r\n                {...todo}\r\n                key={todo.id}\r\n                removeTodo={removeTodo}\r\n                toggelTodo={toggelTodo}\r\n                editTodo={editTodo}\r\n              />\r\n              {i < todos.length - 1 && <Divider />}\r\n            </>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ textAlign: \"center\", padding: \"2rem\" }}\r\n        >\r\n          {\" \"}\r\n          No Todo Now{\" \"}\r\n        </Typography>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useInputState from \"../context/ContextHooks\";\r\n\r\nconst Form = ({ addTodo }) => {\r\n  const [value, handelChange, reset] = useInputState(\"\");\r\n  return (\r\n    <Paper style={{ padding: \"0 1rem\", margin: \"1rem 0\" }}>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addTodo(value);\r\n          reset();\r\n        }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handelChange}\r\n          label=\"Add New Todo\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Form;\r\n","import React, { useEffect } from \"react\";\r\nimport useTodosState from \"../context/useTodosState\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport ToolBar from \"@material-ui/core/ToolBar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TodoList from \"./TodoList\";\r\nimport Form from \"./Form\";\r\n\r\nconst TodoApp = () => {\r\n  const initialTodos = JSON.parse(window.localStorage.getItem(\"todos\") || []);\r\n  const { todos, addTodo, removeTodo, toggelTodo, editTodo } = useTodosState(\r\n    initialTodos\r\n  );\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        paddind: 0,\r\n        margin: 0,\r\n        height: \"100vh\",\r\n        backgroundColor: \"#fafafa\"\r\n      }}\r\n    >\r\n      <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\" }}>\r\n        <ToolBar>\r\n          <Typography color=\"inherit\"> TODOS WITH HOOKS </Typography>\r\n        </ToolBar>\r\n      </AppBar>\r\n      <Grid container justify=\"center\" style={{ paddingTop: \"1rem\" }}>\r\n        <Grid item xs={11} md={7} lg={4}>\r\n          <Form addTodo={addTodo} />\r\n          <TodoList\r\n            todos={todos}\r\n            removeTodo={removeTodo}\r\n            toggelTodo={toggelTodo}\r\n            editTodo={editTodo}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\nexport default TodoApp;\r\n","import { useState } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nexport default initialTodos => {\r\n  const [todos, setTodos] = useState(initialTodos);\r\n\r\n  return {\r\n    todos,\r\n    addTodo: newTodo => {\r\n      setTodos([...todos, { id: uuid(), task: newTodo, completed: false }]);\r\n    },\r\n    removeTodo: todoId => {\r\n      const updatedTodo = todos.filter(todo => todo.id !== todoId);\r\n      setTodos(updatedTodo);\r\n    },\r\n    toggelTodo: todoId => {\r\n      const updatedTodo = todos.map(todo =>\r\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n      setTodos(updatedTodo);\r\n    },\r\n    editTodo: (todoId, newTask) => {\r\n      const editedTodo = todos.map(todo =>\r\n        todo.id === todoId ? { ...todo, task: newTask, completed: false } : todo\r\n      );\r\n      setTodos(editedTodo);\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport TodoApp from \"./component/TodoApp\";\r\n\r\nconst App = () => {\r\n  return <TodoApp />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}