{"version":3,"sources":["context/useToggel.js","context/ContextHooks.js","Hooks/Reducer.js","Hooks/Hooks.js","Hooks/useLocalStorageReducer.js","component/EditTodoForm.js","component/Todo.js","component/TodoList.js","component/Form.js","component/TodoApp.js","App.js","index.js"],"names":["useToggel","initialValue","useState","state","setState","toggle","value","setValue","e","target","reducer","action","type","id","uuid","task","completed","filter","todo","map","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","key","defaultVal","useReducer","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todos","Provider","children","EditTodoForm","toggel","useContext","useInputState","handelChange","reset","handelSubmit","preventDefault","onSubmit","style","display","alignItems","marginLeft","TextField","onChange","fullWidth","autoFocus","IconButton","aria-label","onClick","memo","isEditting","ListItem","height","tabIndex","checked","ListItemText","textDecoration","ListItemSecondaryAction","TodoList","Paper","length","List","i","Divider","Typography","variant","textAlign","padding","Form","margin","label","TodoApp","paddind","backgroundColor","AppBar","color","position","Grid","container","justify","paddingTop","item","xs","md","lg","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18123b92.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useToggel = (initialValue = false) => {\r\n  const [state, setState] = useState(initialValue);\r\n\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  return [state, toggle];\r\n};\r\nexport default useToggel;\r\n","import { useState } from \"react\";\r\n\r\nexport default initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handelChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setValue(\"\");\r\n  };\r\n  return [value, handelChange, reset];\r\n};\r\n","import uuid from \"uuid/v4\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return [...state, { id: uuid(), task: action.task, completed: false }];\r\n    case \"REMOVE\":\r\n      return state.filter(todo => todo.id !== action.id);\r\n    case \"TOGGEL\":\r\n      return state.map(todo =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case \"EDITE\":\r\n      return state.map(todo =>\r\n        todo.id === action.id\r\n          ? { ...todo, task: action.task, completed: false }\r\n          : todo\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React, { createContext } from \"react\";\r\nimport { useLocalStorageReducer } from \"./useLocalStorageReducer\";\r\n\r\nimport reducer from \"./Reducer\";\r\nconst defaultTodos = [];\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport const TodosProvider = props => {\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    \"todos\",\r\n    defaultTodos,\r\n    reducer\r\n  );\r\n\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n};\r\n","import { useReducer, useEffect } from \"react\";\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || String(defaultVal)\r\n      );\r\n    } catch (e) {\r\n      value = defaultVal;\r\n    }\r\n    return value;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return [state, dispatch];\r\n}\r\nexport { useLocalStorageReducer };\r\n","import React, { useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useInputState from \"../context/ContextHooks\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { DispatchContext } from \"../Hooks/Hooks\";\r\n\r\nconst EditTodoForm = ({ toggel, id, task }) => {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handelChange, reset] = useInputState(task);\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch({ type: \"EDITE\", task: value });\r\n    toggel();\r\n    reset();\r\n  };\r\n  return (\r\n    <form\r\n      onSubmit={handelSubmit}\r\n      style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"1rem\" }}\r\n    >\r\n      <TextField value={value} onChange={handelChange} fullWidth autoFocus />\r\n      <IconButton aria-label=\"Save\" onClick={handelSubmit}>\r\n        <SaveIcon />\r\n      </IconButton>\r\n    </form>\r\n  );\r\n};\r\nexport default EditTodoForm;\r\n","import React, { useContext, memo } from \"react\";\r\nimport useToggel from \"../context/useToggel\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport CheckBox from \"@material-ui/core/CheckBox\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EditTodoForm from \"./EditTodoForm\";\r\nimport { DispatchContext } from \"../Hooks/Hooks\";\r\n\r\nconst Todo = ({ task, completed, id }) => {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditting, toggel] = useToggel(false);\r\n\r\n  return (\r\n    <>\r\n      <ListItem style={{ height: \"64px\" }}>\r\n        {isEditting ? (\r\n          <EditTodoForm toggel={toggel} id={id} task={task} />\r\n        ) : (\r\n          <>\r\n            <CheckBox\r\n              tabIndex={-1}\r\n              checked={completed}\r\n              onClick={() => dispatch({ type: \"TOGGEL\", id: id })}\r\n            />\r\n            <ListItemText\r\n              style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\r\n            >\r\n              {task}\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                aria-label=\"Delete\"\r\n                onClick={() => dispatch({ type: \"REMOVE\", id: id })}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <IconButton aria-label=\"Edit\" onClick={toggel}>\r\n                <EditIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </>\r\n        )}\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\nexport default memo(Todo);\r\n","import React, { useContext } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Todo from \"./Todo\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TodosContext } from \"../Hooks/Hooks\";\r\n\r\nconst TodoList = () => {\r\n  const todos = useContext(TodosContext);\r\n\r\n  return (\r\n    <Paper>\r\n      {todos.length > 0 ? (\r\n        <List>\r\n          {todos.map((todo, i) => (\r\n            <>\r\n              <Todo {...todo} key={todo.id} />\r\n              {i < todos.length - 1 && <Divider />}\r\n            </>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ textAlign: \"center\", padding: \"2rem\" }}\r\n        >\r\n          {\" \"}\r\n          No Todo Now{\" \"}\r\n        </Typography>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useContext } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useInputState from \"../context/ContextHooks\";\r\nimport { DispatchContext } from \"../Hooks/Hooks\";\r\n\r\nconst Form = () => {\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handelChange, reset] = useInputState(\"\");\r\n  return (\r\n    <Paper style={{ padding: \"0 1rem\", margin: \"1rem 0\" }}>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          dispatch({ type: \"ADD\", task: value });\r\n          reset();\r\n        }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handelChange}\r\n          label=\"Add New Todo\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport ToolBar from \"@material-ui/core/ToolBar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TodoList from \"./TodoList\";\r\nimport Form from \"./Form\";\r\nimport { TodosProvider } from \"../Hooks/Hooks\";\r\n\r\nconst TodoApp = () => {\r\n  return (\r\n    <Paper\r\n      style={{\r\n        paddind: 0,\r\n        margin: 0,\r\n        height: \"100vh\",\r\n        backgroundColor: \"#fafafa\"\r\n      }}\r\n    >\r\n      <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\" }}>\r\n        <ToolBar>\r\n          <Typography color=\"inherit\"> TODOS WITH HOOKS </Typography>\r\n        </ToolBar>\r\n      </AppBar>\r\n      <Grid container justify=\"center\" style={{ paddingTop: \"1rem\" }}>\r\n        <Grid item xs={11} md={7} lg={4}>\r\n          <TodosProvider>\r\n            <Form />\r\n            <TodoList />\r\n          </TodosProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\nexport default TodoApp;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport TodoApp from \"./component/TodoApp\";\r\n\r\nconst App = () => {\r\n  return <TodoApp />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}